// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.adorsys.adpharma.web;

import java.lang.String;
import org.adorsys.adpharma.domain.AvoirClient;
import org.adorsys.adpharma.domain.EtatCredits;
import org.adorsys.adpharma.domain.Inventaire;
import org.adorsys.adpharma.domain.LicenceEntity;
import org.adorsys.adpharma.domain.LigneApprovisionement;
import org.adorsys.adpharma.domain.LigneCmdClient;
import org.adorsys.adpharma.domain.LigneCmdFournisseur;
import org.adorsys.adpharma.domain.LigneFacture;
import org.adorsys.adpharma.domain.LigneInventaire;
import org.adorsys.adpharma.domain.ListingEtatDette;
import org.adorsys.adpharma.domain.MouvementStock;
import org.adorsys.adpharma.domain.Ordonnancier;
import org.adorsys.adpharma.domain.Paiement;
import org.adorsys.adpharma.domain.PrinterConfiguration;
import org.adorsys.adpharma.domain.SortieProduit;
import org.adorsys.adpharma.domain.TransformationProduit;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(new AvoirClientConverter());
        registry.addConverter(new EtatCreditsConverter());
        registry.addConverter(new InventaireConverter());
        registry.addConverter(new LicenceEntityConverter());
        registry.addConverter(new LigneApprovisionementConverter());
        registry.addConverter(new LigneCmdClientConverter());
        registry.addConverter(new LigneCmdFournisseurConverter());
        registry.addConverter(new LigneFactureConverter());
        registry.addConverter(new LigneInventaireConverter());
        registry.addConverter(new ListingEtatDetteConverter());
        registry.addConverter(new MouvementStockConverter());
        registry.addConverter(new OrdonnancierConverter());
        registry.addConverter(new PaiementConverter());
        registry.addConverter(new PrinterConfigurationConverter());
        registry.addConverter(new SortieProduitConverter());
        registry.addConverter(new TransformationProduitConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
    static class org.adorsys.adpharma.web.ApplicationConversionServiceFactoryBean.AvoirClientConverter implements Converter<AvoirClient, String> {
        public String convert(AvoirClient avoirClient) {
            return new StringBuilder().append(avoirClient.getNumero()).append(" ").append(avoirClient.getDateEdition()).append(" ").append(avoirClient.getMontant()).append(" ").append(avoirClient.getClientName()).toString();
        }
        
    }
    
    static class org.adorsys.adpharma.web.ApplicationConversionServiceFactoryBean.EtatCreditsConverter implements Converter<EtatCredits, String> {
        public String convert(EtatCredits etatCredits) {
            return new StringBuilder().append(etatCredits.getClientId()).append(" ").append(etatCredits.getClientName()).append(" ").append(etatCredits.getEtatNumber()).append(" ").append(etatCredits.getDateEdition()).toString();
        }
        
    }
    
    static class org.adorsys.adpharma.web.ApplicationConversionServiceFactoryBean.InventaireConverter implements Converter<Inventaire, String> {
        public String convert(Inventaire inventaire) {
            return new StringBuilder().append(inventaire.getCipProduct()).append(" ").append(inventaire.getDateRupture()).append(" ").append(inventaire.getDateDebut()).append(" ").append(inventaire.getDateFin()).toString();
        }
        
    }
    
    static class org.adorsys.adpharma.web.ApplicationConversionServiceFactoryBean.LicenceEntityConverter implements Converter<LicenceEntity, String> {
        public String convert(LicenceEntity licenceEntity) {
            return new StringBuilder().append(licenceEntity.getBeginDate()).append(" ").append(licenceEntity.getEndDate()).append(" ").append(licenceEntity.getTranstientBegin()).append(" ").append(licenceEntity.getTranstientEnd()).toString();
        }
        
    }
    
    static class org.adorsys.adpharma.web.ApplicationConversionServiceFactoryBean.LigneApprovisionementConverter implements Converter<LigneApprovisionement, String> {
        public String convert(LigneApprovisionement ligneApprovisionement) {
            return new StringBuilder().append(ligneApprovisionement.getCip()).append(" ").append(ligneApprovisionement.getQuantiteVendu()).append(" ").append(ligneApprovisionement.getQteCip()).append(" ").append(ligneApprovisionement.getFournisseur()).toString();
        }
        
    }
    
    static class org.adorsys.adpharma.web.ApplicationConversionServiceFactoryBean.LigneCmdClientConverter implements Converter<LigneCmdClient, String> {
        public String convert(LigneCmdClient ligneCmdClient) {
            return new StringBuilder().append(ligneCmdClient.getQuantiteCommande()).append(" ").append(ligneCmdClient.getQuantiteRetourne()).append(" ").append(ligneCmdClient.getDateSaisie()).append(" ").append(ligneCmdClient.getPrixUnitaire()).toString();
        }
        
    }
    
    static class org.adorsys.adpharma.web.ApplicationConversionServiceFactoryBean.LigneCmdFournisseurConverter implements Converter<LigneCmdFournisseur, String> {
        public String convert(LigneCmdFournisseur ligneCmdFournisseur) {
            return new StringBuilder().append(ligneCmdFournisseur.getCip()).append(" ").append(ligneCmdFournisseur.getDesignation()).append(" ").append(ligneCmdFournisseur.getIndexLine()).append(" ").append(ligneCmdFournisseur.getDateSaisie()).toString();
        }
        
    }
    
    static class org.adorsys.adpharma.web.ApplicationConversionServiceFactoryBean.LigneFactureConverter implements Converter<LigneFacture, String> {
        public String convert(LigneFacture ligneFacture) {
            return new StringBuilder().append(ligneFacture.getIndexline()).append(" ").append(ligneFacture.getCip()).append(" ").append(ligneFacture.getDesignation()).append(" ").append(ligneFacture.getCipM()).toString();
        }
        
    }
    
    static class org.adorsys.adpharma.web.ApplicationConversionServiceFactoryBean.LigneInventaireConverter implements Converter<LigneInventaire, String> {
        public String convert(LigneInventaire ligneInventaire) {
            return new StringBuilder().append(ligneInventaire.getQteEnStock()).append(" ").append(ligneInventaire.getQteReel()).append(" ").append(ligneInventaire.getEcart()).append(" ").append(ligneInventaire.getPrixUnitaire()).toString();
        }
        
    }
    
    static class org.adorsys.adpharma.web.ApplicationConversionServiceFactoryBean.ListingEtatDetteConverter implements Converter<ListingEtatDette, String> {
        public String convert(ListingEtatDette listingEtatDette) {
            return new StringBuilder().append(listingEtatDette.getDate()).toString();
        }
        
    }
    
    static class org.adorsys.adpharma.web.ApplicationConversionServiceFactoryBean.MouvementStockConverter implements Converter<MouvementStock, String> {
        public String convert(MouvementStock mouvementStock) {
            return new StringBuilder().append(mouvementStock.getpAchatTotal()).append(" ").append(mouvementStock.getpVenteTotal()).append(" ").append(mouvementStock.getMvtNumber()).append(" ").append(mouvementStock.getDateCreation()).toString();
        }
        
    }
    
    static class org.adorsys.adpharma.web.ApplicationConversionServiceFactoryBean.OrdonnancierConverter implements Converter<Ordonnancier, String> {
        public String convert(Ordonnancier ordonnancier) {
            return new StringBuilder().append(ordonnancier.getPrescripteur()).append(" ").append(ordonnancier.getHospital()).append(" ").append(ordonnancier.getNomDuPatient()).append(" ").append(ordonnancier.getVendeur()).toString();
        }
        
    }
    
    static class org.adorsys.adpharma.web.ApplicationConversionServiceFactoryBean.PaiementConverter implements Converter<Paiement, String> {
        public String convert(Paiement paiement) {
            return new StringBuilder().append(paiement.getCaisses()).append(" ").append(paiement.getPaiementNumber()).append(" ").append(paiement.getDatePaiement()).append(" ").append(paiement.getDateSaisie()).toString();
        }
        
    }
    
    static class org.adorsys.adpharma.web.ApplicationConversionServiceFactoryBean.PrinterConfigurationConverter implements Converter<PrinterConfiguration, String> {
        public String convert(PrinterConfiguration printerConfiguration) {
            return new StringBuilder().append(printerConfiguration.getPrinterName()).append(" ").append(printerConfiguration.getComputerAdresse()).toString();
        }
        
    }
    
    static class org.adorsys.adpharma.web.ApplicationConversionServiceFactoryBean.SortieProduitConverter implements Converter<SortieProduit, String> {
        public String convert(SortieProduit sortieProduit) {
            return new StringBuilder().append(sortieProduit.getAprovisionnement()).append(" ").append(sortieProduit.getCipMaison()).append(" ").append(sortieProduit.getCip()).append(" ").append(sortieProduit.getDesignation()).toString();
        }
        
    }
    
    static class org.adorsys.adpharma.web.ApplicationConversionServiceFactoryBean.TransformationProduitConverter implements Converter<TransformationProduit, String> {
        public String convert(TransformationProduit transformationProduit) {
            return new StringBuilder().append(transformationProduit.getOrigineId()).append(" ").append(transformationProduit.getOrigineName()).append(" ").append(transformationProduit.getCibleId()).append(" ").append(transformationProduit.getCibleName()).toString();
        }
        
    }
    
}
