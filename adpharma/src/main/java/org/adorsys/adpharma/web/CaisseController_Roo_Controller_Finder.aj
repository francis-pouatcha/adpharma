// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.adorsys.adpharma.web;

import java.lang.Boolean;
import java.lang.String;
import java.util.Date;
import org.adorsys.adpharma.domain.Caisse;
import org.adorsys.adpharma.domain.PharmaUser;
import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

privileged aspect CaisseController_Roo_Controller_Finder {
    
    @RequestMapping(params = { "find=ByCaisseOuverteNot", "form" }, method = RequestMethod.GET)
    public String CaisseController.findCaissesByCaisseOuverteNotForm(Model uiModel) {
        return "caisses/findCaissesByCaisseOuverteNot";
    }
    
    @RequestMapping(params = "find=ByCaisseOuverteNot", method = RequestMethod.GET)
    public String CaisseController.findCaissesByCaisseOuverteNot(@RequestParam(value = "caisseOuverte", required = false) Boolean caisseOuverte, Model uiModel) {
        uiModel.addAttribute("caisses", Caisse.findCaissesByCaisseOuverteNot(caisseOuverte == null ? new Boolean(false) : caisseOuverte).getResultList());
        return "caisses/list";
    }
    
    @RequestMapping(params = { "find=ByCaisseOuverteNotAndCaissier", "form" }, method = RequestMethod.GET)
    public String CaisseController.findCaissesByCaisseOuverteNotAndCaissierForm(Model uiModel) {
        uiModel.addAttribute("pharmausers", PharmaUser.findAllPharmaUsers());
        return "caisses/findCaissesByCaisseOuverteNotAndCaissier";
    }
    
    @RequestMapping(params = "find=ByCaisseOuverteNotAndCaissier", method = RequestMethod.GET)
    public String CaisseController.findCaissesByCaisseOuverteNotAndCaissier(@RequestParam(value = "caisseOuverte", required = false) Boolean caisseOuverte, @RequestParam("caissier") PharmaUser caissier, Model uiModel) {
        uiModel.addAttribute("caisses", Caisse.findCaissesByCaisseOuverteNotAndCaissier(caisseOuverte == null ? new Boolean(false) : caisseOuverte, caissier).getResultList());
        return "caisses/list";
    }
    
    @RequestMapping(params = { "find=ByDateOuvertureBetween", "form" }, method = RequestMethod.GET)
    public String CaisseController.findCaissesByDateOuvertureBetweenForm(Model uiModel) {
        addDateTimeFormatPatterns(uiModel);
        return "caisses/findCaissesByDateOuvertureBetween";
    }
    
    @RequestMapping(params = "find=ByDateOuvertureBetween", method = RequestMethod.GET)
    public String CaisseController.findCaissesByDateOuvertureBetween(@RequestParam("minDateOuverture") @DateTimeFormat(pattern = "dd-MM-yyyy hh:mm") Date minDateOuverture, @RequestParam("maxDateOuverture") @DateTimeFormat(pattern = "dd-MM-yyyy hh:mm") Date maxDateOuverture, Model uiModel) {
        uiModel.addAttribute("caisses", Caisse.findCaissesByDateOuvertureBetween(minDateOuverture, maxDateOuverture).getResultList());
        addDateTimeFormatPatterns(uiModel);
        return "caisses/list";
    }
    
}
