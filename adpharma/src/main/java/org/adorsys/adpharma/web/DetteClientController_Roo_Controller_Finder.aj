// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.adorsys.adpharma.web;

import java.lang.Boolean;
import java.lang.Long;
import java.lang.String;
import java.util.Date;
import org.adorsys.adpharma.domain.DetteClient;
import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

privileged aspect DetteClientController_Roo_Controller_Finder {
    
    @RequestMapping(params = { "find=ByClientIdEqualsAndSolderNot", "form" }, method = RequestMethod.GET)
    public String DetteClientController.findDetteClientsByClientIdEqualsAndSolderNotForm(Model uiModel) {
        return "detteclients/findDetteClientsByClientIdEqualsAndSolderNot";
    }
    
    @RequestMapping(params = "find=ByClientIdEqualsAndSolderNot", method = RequestMethod.GET)
    public String DetteClientController.findDetteClientsByClientIdEqualsAndSolderNot(@RequestParam("clientId") Long clientId, @RequestParam(value = "solder", required = false) Boolean solder, Model uiModel) {
        uiModel.addAttribute("detteclients", DetteClient.findDetteClientsByClientIdEqualsAndSolderNot(clientId, solder == null ? new Boolean(false) : solder).getResultList());
        return "detteclients/list";
    }
    
    @RequestMapping(params = { "find=ByClientNameLike", "form" }, method = RequestMethod.GET)
    public String DetteClientController.findDetteClientsByClientNameLikeForm(Model uiModel) {
        return "detteclients/findDetteClientsByClientNameLike";
    }
    
    @RequestMapping(params = "find=ByClientNameLike", method = RequestMethod.GET)
    public String DetteClientController.findDetteClientsByClientNameLike(@RequestParam("clientName") String clientName, Model uiModel) {
        uiModel.addAttribute("detteclients", DetteClient.findDetteClientsByClientNameLike(clientName).getResultList());
        return "detteclients/list";
    }
    
    @RequestMapping(params = { "find=ByClientNameLikeAndSolderNot", "form" }, method = RequestMethod.GET)
    public String DetteClientController.findDetteClientsByClientNameLikeAndSolderNotForm(Model uiModel) {
        return "detteclients/findDetteClientsByClientNameLikeAndSolderNot";
    }
    
    @RequestMapping(params = "find=ByClientNameLikeAndSolderNot", method = RequestMethod.GET)
    public String DetteClientController.findDetteClientsByClientNameLikeAndSolderNot(@RequestParam("clientName") String clientName, @RequestParam(value = "solder", required = false) Boolean solder, Model uiModel) {
        uiModel.addAttribute("detteclients", DetteClient.findDetteClientsByClientNameLikeAndSolderNot(clientName, solder == null ? new Boolean(false) : solder).getResultList());
        return "detteclients/list";
    }
    
    @RequestMapping(params = { "find=ByClientNoLike", "form" }, method = RequestMethod.GET)
    public String DetteClientController.findDetteClientsByClientNoLikeForm(Model uiModel) {
        return "detteclients/findDetteClientsByClientNoLike";
    }
    
    @RequestMapping(params = "find=ByClientNoLike", method = RequestMethod.GET)
    public String DetteClientController.findDetteClientsByClientNoLike(@RequestParam("clientNo") String clientNo, Model uiModel) {
        uiModel.addAttribute("detteclients", DetteClient.findDetteClientsByClientNoLike(clientNo).getResultList());
        return "detteclients/list";
    }
    
    @RequestMapping(params = { "find=ByDateCreationBetween", "form" }, method = RequestMethod.GET)
    public String DetteClientController.findDetteClientsByDateCreationBetweenForm(Model uiModel) {
        addDateTimeFormatPatterns(uiModel);
        return "detteclients/findDetteClientsByDateCreationBetween";
    }
    
    @RequestMapping(params = "find=ByDateCreationBetween", method = RequestMethod.GET)
    public String DetteClientController.findDetteClientsByDateCreationBetween(@RequestParam("minDateCreation") @DateTimeFormat(pattern = "dd-MM-yyyy HH:mm") Date minDateCreation, @RequestParam("maxDateCreation") @DateTimeFormat(pattern = "dd-MM-yyyy HH:mm") Date maxDateCreation, Model uiModel) {
        uiModel.addAttribute("detteclients", DetteClient.findDetteClientsByDateCreationBetween(minDateCreation, maxDateCreation).getResultList());
        addDateTimeFormatPatterns(uiModel);
        return "detteclients/list";
    }
    
    @RequestMapping(params = { "find=ByFactureIdEqualsAndClientIdEquals", "form" }, method = RequestMethod.GET)
    public String DetteClientController.findDetteClientsByFactureIdEqualsAndClientIdEqualsForm(Model uiModel) {
        return "detteclients/findDetteClientsByFactureIdEqualsAndClientIdEquals";
    }
    
    @RequestMapping(params = "find=ByFactureIdEqualsAndClientIdEquals", method = RequestMethod.GET)
    public String DetteClientController.findDetteClientsByFactureIdEqualsAndClientIdEquals(@RequestParam("factureId") Long factureId, @RequestParam("clientId") Long clientId, Model uiModel) {
        uiModel.addAttribute("detteclients", DetteClient.findDetteClientsByFactureIdEqualsAndClientIdEquals(factureId, clientId).getResultList());
        return "detteclients/list";
    }
    
}
