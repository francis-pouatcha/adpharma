// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.adorsys.adpharma.web;

import java.lang.Boolean;
import java.lang.String;
import java.util.Date;
import org.adorsys.adpharma.domain.CommandeFournisseur;
import org.adorsys.adpharma.domain.Etat;
import org.adorsys.adpharma.domain.Fournisseur;
import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

privileged aspect CommandeFournisseurController_Roo_Controller_Finder {
    
    @RequestMapping(params = { "find=ByCmdNumberEquals", "form" }, method = RequestMethod.GET)
    public String CommandeFournisseurController.findCommandeFournisseursByCmdNumberEqualsForm(Model uiModel) {
        return "commandefournisseurs/findCommandeFournisseursByCmdNumberEquals";
    }
    
    @RequestMapping(params = "find=ByCmdNumberEquals", method = RequestMethod.GET)
    public String CommandeFournisseurController.findCommandeFournisseursByCmdNumberEquals(@RequestParam("cmdNumber") String cmdNumber, Model uiModel) {
        uiModel.addAttribute("commandefournisseurs", CommandeFournisseur.findCommandeFournisseursByCmdNumberEquals(cmdNumber).getResultList());
        return "commandefournisseurs/list";
    }
    
    @RequestMapping(params = { "find=ByDateCreationBetweenAndEtatCmd", "form" }, method = RequestMethod.GET)
    public String CommandeFournisseurController.findCommandeFournisseursByDateCreationBetweenAndEtatCmdForm(Model uiModel) {
        uiModel.addAttribute("etats", java.util.Arrays.asList(Etat.class.getEnumConstants()));
        addDateTimeFormatPatterns(uiModel);
        return "commandefournisseurs/findCommandeFournisseursByDateCreationBetweenAndEtatCmd";
    }
    
    @RequestMapping(params = "find=ByDateCreationBetweenAndEtatCmd", method = RequestMethod.GET)
    public String CommandeFournisseurController.findCommandeFournisseursByDateCreationBetweenAndEtatCmd(@RequestParam("minDateCreation") @DateTimeFormat(pattern = "dd-MM-yyyy HH:mm") Date minDateCreation, @RequestParam("maxDateCreation") @DateTimeFormat(pattern = "dd-MM-yyyy HH:mm") Date maxDateCreation, @RequestParam("etatCmd") Etat etatCmd, Model uiModel) {
        uiModel.addAttribute("commandefournisseurs", CommandeFournisseur.findCommandeFournisseursByDateCreationBetweenAndEtatCmd(minDateCreation, maxDateCreation, etatCmd).getResultList());
        addDateTimeFormatPatterns(uiModel);
        return "commandefournisseurs/list";
    }
    
    @RequestMapping(params = { "find=ByDateLimiteLivraisonBetween", "form" }, method = RequestMethod.GET)
    public String CommandeFournisseurController.findCommandeFournisseursByDateLimiteLivraisonBetweenForm(Model uiModel) {
        addDateTimeFormatPatterns(uiModel);
        return "commandefournisseurs/findCommandeFournisseursByDateLimiteLivraisonBetween";
    }
    
    @RequestMapping(params = "find=ByDateLimiteLivraisonBetween", method = RequestMethod.GET)
    public String CommandeFournisseurController.findCommandeFournisseursByDateLimiteLivraisonBetween(@RequestParam("minDateLimiteLivraison") @DateTimeFormat(pattern = "dd-MM-yyyy HH:mm") Date minDateLimiteLivraison, @RequestParam("maxDateLimiteLivraison") @DateTimeFormat(pattern = "dd-MM-yyyy HH:mm") Date maxDateLimiteLivraison, Model uiModel) {
        uiModel.addAttribute("commandefournisseurs", CommandeFournisseur.findCommandeFournisseursByDateLimiteLivraisonBetween(minDateLimiteLivraison, maxDateLimiteLivraison).getResultList());
        addDateTimeFormatPatterns(uiModel);
        return "commandefournisseurs/list";
    }
    
    @RequestMapping(params = { "find=ByFournisseurAndDateCreationBetween", "form" }, method = RequestMethod.GET)
    public String CommandeFournisseurController.findCommandeFournisseursByFournisseurAndDateCreationBetweenForm(Model uiModel) {
        uiModel.addAttribute("fournisseurs", Fournisseur.findAllFournisseurs());
        addDateTimeFormatPatterns(uiModel);
        return "commandefournisseurs/findCommandeFournisseursByFournisseurAndDateCreationBetween";
    }
    
    @RequestMapping(params = "find=ByFournisseurAndDateCreationBetween", method = RequestMethod.GET)
    public String CommandeFournisseurController.findCommandeFournisseursByFournisseurAndDateCreationBetween(@RequestParam("fournisseur") Fournisseur fournisseur, @RequestParam("minDateCreation") @DateTimeFormat(pattern = "dd-MM-yyyy HH:mm") Date minDateCreation, @RequestParam("maxDateCreation") @DateTimeFormat(pattern = "dd-MM-yyyy HH:mm") Date maxDateCreation, Model uiModel) {
        uiModel.addAttribute("commandefournisseurs", CommandeFournisseur.findCommandeFournisseursByFournisseurAndDateCreationBetween(fournisseur, minDateCreation, maxDateCreation).getResultList());
        addDateTimeFormatPatterns(uiModel);
        return "commandefournisseurs/list";
    }
    
    @RequestMapping(params = { "find=ByLivreNot", "form" }, method = RequestMethod.GET)
    public String CommandeFournisseurController.findCommandeFournisseursByLivreNotForm(Model uiModel) {
        return "commandefournisseurs/findCommandeFournisseursByLivreNot";
    }
    
    @RequestMapping(params = "find=ByLivreNot", method = RequestMethod.GET)
    public String CommandeFournisseurController.findCommandeFournisseursByLivreNot(@RequestParam(value = "livre", required = false) Boolean livre, Model uiModel) {
        uiModel.addAttribute("commandefournisseurs", CommandeFournisseur.findCommandeFournisseursByLivreNot(livre == null ? new Boolean(false) : livre).getResultList());
        return "commandefournisseurs/list";
    }
    
}
