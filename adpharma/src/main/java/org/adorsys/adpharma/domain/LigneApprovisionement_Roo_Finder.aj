// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.adorsys.adpharma.domain;

import java.lang.String;
import java.math.BigInteger;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;
import org.adorsys.adpharma.domain.LigneApprovisionement;
import org.adorsys.adpharma.domain.Produit;

privileged aspect LigneApprovisionement_Roo_Finder {
    
    public static TypedQuery<LigneApprovisionement> LigneApprovisionement.findLigneApprovisionementsByProduit(Produit produit) {
        if (produit == null) throw new IllegalArgumentException("The produit argument is required");
        EntityManager em = LigneApprovisionement.entityManager();
        TypedQuery<LigneApprovisionement> q = em.createQuery("SELECT o FROM LigneApprovisionement AS o WHERE o.produit = :produit", LigneApprovisionement.class);
        q.setParameter("produit", produit);
        return q;
    }
    
    public static TypedQuery<LigneApprovisionement> LigneApprovisionement.findLigneApprovisionementsByQuantieEnStockAndCipEquals(BigInteger quantieEnStock, String cip) {
        if (quantieEnStock == null) throw new IllegalArgumentException("The quantieEnStock argument is required");
        if (cip == null || cip.length() == 0) throw new IllegalArgumentException("The cip argument is required");
        EntityManager em = LigneApprovisionement.entityManager();
        TypedQuery<LigneApprovisionement> q = em.createQuery("SELECT o FROM LigneApprovisionement AS o WHERE o.quantieEnStock = :quantieEnStock AND o.cip = :cip", LigneApprovisionement.class);
        q.setParameter("quantieEnStock", quantieEnStock);
        q.setParameter("cip", cip);
        return q;
    }
    
    public static TypedQuery<LigneApprovisionement> LigneApprovisionement.findLigneApprovisionementsByQuantieEnStockAndDesignationLike(BigInteger quantieEnStock, String designation) {
        if (quantieEnStock == null) throw new IllegalArgumentException("The quantieEnStock argument is required");
        if (designation == null || designation.length() == 0) throw new IllegalArgumentException("The designation argument is required");
        designation = designation.replace('*', '%');
        if (designation.charAt(0) != '%') {
            designation = "%" + designation;
        }
        if (designation.charAt(designation.length() - 1) != '%') {
            designation = designation + "%";
        }
        EntityManager em = LigneApprovisionement.entityManager();
        TypedQuery<LigneApprovisionement> q = em.createQuery("SELECT o FROM LigneApprovisionement AS o WHERE o.quantieEnStock = :quantieEnStock AND LOWER(o.designation) LIKE LOWER(:designation)", LigneApprovisionement.class);
        q.setParameter("quantieEnStock", quantieEnStock);
        q.setParameter("designation", designation);
        return q;
    }
    
}
