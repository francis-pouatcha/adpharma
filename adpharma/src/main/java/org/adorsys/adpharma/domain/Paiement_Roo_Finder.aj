// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.adorsys.adpharma.domain;

import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;
import org.adorsys.adpharma.domain.Caisse;
import org.adorsys.adpharma.domain.Paiement;
import org.adorsys.adpharma.domain.TypePaiement;

privileged aspect Paiement_Roo_Finder {
    
    public static TypedQuery<Paiement> Paiement.findPaiementsByCaisse(Caisse caisse) {
        if (caisse == null) throw new IllegalArgumentException("The caisse argument is required");
        EntityManager em = Paiement.entityManager();
        TypedQuery<Paiement> q = em.createQuery("SELECT o FROM Paiement AS o WHERE o.caisse = :caisse", Paiement.class);
        q.setParameter("caisse", caisse);
        return q;
    }
    
    public static TypedQuery<Paiement> Paiement.findPaiementsByTypePaiementAndCaisse(TypePaiement typePaiement, Caisse caisse) {
        if (typePaiement == null) throw new IllegalArgumentException("The typePaiement argument is required");
        if (caisse == null) throw new IllegalArgumentException("The caisse argument is required");
        EntityManager em = Paiement.entityManager();
        TypedQuery<Paiement> q = em.createQuery("SELECT o FROM Paiement AS o WHERE o.typePaiement = :typePaiement AND o.caisse = :caisse", Paiement.class);
        q.setParameter("typePaiement", typePaiement);
        q.setParameter("caisse", caisse);
        return q;
    }
    
}
